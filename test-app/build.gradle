buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/repo' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/repo' }
}

def gitSha = 'git rev-parse HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
def versionBuild = System.getenv("BUILD_NUMBER") != null ? "b${System.getenv("BUILD_NUMBER")}" : ""

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "com.vodafone.global.sdk.testapp"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0.0" + versionBuild

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    signingConfigs {
        release {
            storeFile file("vodafone-incubation.keystore")
            storePassword SEAMLESSID_TEST_APP_RELEASE_STORE_PASSWORD
            keyAlias "releasekey"
            keyPassword SEAMLESSID_TEST_APP_RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        imsiSmsPreProd {}
        imsiPreProd {}
        smsPreProd {}
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            def flavorName = variant.flavorName
            // flavors can't have hyphen in their name so we have to change it
            if (flavorName == "imsiSmsPreProd") {
                flavorName = "imsi-sms-pre-prod"
            } else if (flavorName == "imsiPreProd") {
                flavorName = "imsi-pre-prod"
            } else if (flavorName == "smsPreProd") {
                flavorName = "sms-pre-prod"
            }
            def newName = file.name.replace("test-app-${variant.flavorName}", "vodafone-android-sdk-testing-${flavorName}")
            if (variant.buildType.name == "release")
                newName = newName.replace("-release", "")
            output.outputFile = new File(file.parentFile, newName)
            if (output.zipAlign)
                output.outputFile = new File(file.parentFile, newName.replace("-unaligned", ""))
        }
    }
}

dependencies {
    imsiSmsPreProdCompile project(path: ':sdk', configuration: 'preProdDebug')
    imsiPreProdCompile project(path: ':sdk', configuration: 'preProdDebug')
    smsPreProdCompile project(path: ':sdk', configuration: 'preProdDebug')
    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.jakewharton.timber:timber:2.4.1'
    apt 'net.simonvt.schematic:schematic-compiler:0.5.3'
    compile 'net.simonvt.schematic:schematic:0.5.3'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile('com.crashlytics.sdk.android:crashlytics:2.0.0@aar') {
        transitive = true;
    }
    compile 'org.apache.commons:commons-csv:1.0'
}

apt {
    arguments {
        schematicOutPackage 'com.vodafone.global.sdk.testapp.provider'
    }
}
