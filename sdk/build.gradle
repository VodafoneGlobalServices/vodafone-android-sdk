apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    publishNonDefault true

    defaultConfig {
        applicationId "com.vodafone.global"
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
            versionNameSuffix = "-DEBUG"
        }
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        dit {}
        preProd {}
        prod {}
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            def flavorName = variant.flavorName
            // flavors can't have hyphen in their name so we have to change it
            if (flavorName == "preProd")
                flavorName = "pre-prod"
            def newName = file.name.replace("sdk-${variant.flavorName}", "vodafone-android-sdk-${flavorName}")
            if (variant.buildType.name == "release")
                newName = newName.replace("-release", "")
            output.outputFile = new File(file.parentFile, newName)
        }
    }
}

dependencies {
    // SDK is using SNAPSHOT (rev. c3a31993cea76b68d6a9a5fef4036576eb27b98b)
    // of OkHttp from `libs` because we need custom handling of http
    // redirection that isn't available in current release.
    // It should change to release version as soon as possible.
    // compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.google.guava:guava:17.0'
    compile 'joda-time:joda-time:2.4'
    compile 'com.octo.android.robospice:robospice:1.4.14'
    compile ('com.octo.android.robospice:robospice-okhttp:1.4.14') {
        exclude group: 'com.squareup.okhttp'
    }
    compile 'com.squareup.okio:okio:1.0.1'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task zip2jar(type: Zip, dependsOn: "compileDitReleaseJava") {
    from 'build/intermediates/classes/dit/release'
    destinationDir = file('build/libs')
    extension = "jar"
}
